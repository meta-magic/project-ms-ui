import { OnInit, ChangeDetectorRef } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { LocalStorageService } from 'platform-commons';
import { CookieService } from 'platform-commons';
import { NotificationService } from 'platform-commons';
import { MessagingService } from 'platform-commons';
import { LoaderService } from 'platform-commons';
import { Router, ActivatedRoute } from '@angular/router';
export declare class CreateProjectComponent implements OnInit {
    private http;
    private ls;
    private cookieService;
    loaderService: LoaderService;
    private msgService;
    _notificationService: NotificationService;
    private route;
    private _route;
    private _cdf;
    projectCreationModel: ProjectCreationModel;
    asyncFlag: boolean;
    serverPort: any;
    newTokenid: string;
    msgData: any;
    validationMsgArray: any;
    portDisableFlag: boolean;
    themes: any;
    amexioThemes: any;
    materialthemes: any;
    projectList: any;
    showCard: boolean;
    projectId: string;
    disblefields: boolean;
    showUpadteBtn: boolean;
    disableUpdateBtn: boolean;
    confirmdialogue: boolean;
    themeID: any;
    showThemeFlag: boolean;
    isLoading: boolean;
    migrationStatusDialogue: boolean;
    constructor(http: HttpClient, ls: LocalStorageService, cookieService: CookieService, loaderService: LoaderService, msgService: MessagingService, _notificationService: NotificationService, route: ActivatedRoute, _route: Router, _cdf: ChangeDetectorRef);
    ngOnInit(): void;
    getThemes(col: any): any[];
    getProjectList(): void;
    openProjectUi(): void;
    onBlurCheck(rUrl: any): void;
    onProjectSelect(event: any): void;
    setTheme(col: any): void;
    cancelProject(): void;
    createInvalidCompErrorData(): void;
    createErrorData(): void;
    onUpdate(): void;
    uiCreatedEvent(string: any): void;
    ValidateAndSave(): void;
    saveProjectCreation(): void;
    showtask(): void;
    checkStatus(data: any): void;
    clearData(): void;
    getThemeData(): void;
    iterateData(themes: any): void;
}
export declare class ProjectCreationModel {
    projectName: string;
    projectDescription: string;
    themeUUID: any;
    constructor();
}
